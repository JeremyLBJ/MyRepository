<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnit.learning_shop.dao.CourseBaseMapper" >
  <resultMap id="BaseResultMap" type="com.hnit.learning_shop.entity.CourseBase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    <result column="catid" property="catid" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="c_desc" property="cDesc" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="old_pricee" property="oldPricee" jdbcType="DOUBLE" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="learncount" property="learncount" jdbcType="INTEGER" />
  	
  	 <!-- <collection property="xcUsers" column="id" fetchType="lazy"
    select="selectByUid"></collection> -->
    
  <association property="category" column="catid" fetchType="lazy" 
  select="findCategoryByCatid"></association>
  
  </resultMap>
   <select id="findCategoryByCatid" resultMap="com.hnit.learning_shop.dao.CategoryMapper.BaseResultMap" parameterType="com.hnit.learning_shop.entity.CourseBaseExample">
  	select * from category where id=#{id}
  </select>
  <select id="selectByCatid" resultMap="BaseResultMap" parameterType="com.hnit.learning_shop.entity.CourseBaseExample">
  	select * from course_base where catid=#{id}
  </select>
  
  <select id="selectByUid" resultMap="com.hnit.learning_shop.dao.XcUserMapper.BaseResultMap">
		SELECT u.id,o.oid,c.id,d.ordertime,u.username,c.price
		 FROM course_base c 
		JOIN teacher_course t ON c.tid=t.tid 
		JOIN orderitem o ON t.cid=o.cid 
		JOIN orders d ON o.oid=d.id 
		JOIN xc_user u ON d.uid=u.id  
  </select>
  <select id="findAllCourseByUid" resultMap="BaseResultMap">
  		select * from course_base where id in (select cid from orders o join orderitem i on o.id = i.oid where uid = #{uid });
  </select>
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cname, catid, tid, grade, c_desc, price, old_pricee, start_time, end_time, pic, 
    learncount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnit.learning_shop.entity.CourseBaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_base
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course_base
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_base
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hnit.learning_shop.entity.CourseBaseExample" >
    delete from course_base
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnit.learning_shop.entity.CourseBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_base (cname, catid, tid, 
      grade, c_desc, price, 
      old_pricee, start_time, end_time, 
      pic, learncount)
    values (#{cname,jdbcType=VARCHAR}, #{catid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, 
      #{grade,jdbcType=VARCHAR}, #{cDesc,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{oldPricee,jdbcType=DOUBLE}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{pic,jdbcType=VARCHAR}, #{learncount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hnit.learning_shop.entity.CourseBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_base
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cname != null" >
        cname,
      </if>
      <if test="catid != null" >
        catid,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="cDesc != null" >
        c_desc,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="oldPricee != null" >
        old_pricee,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="learncount != null" >
        learncount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cname != null" >
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="catid != null" >
        #{catid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="cDesc != null" >
        #{cDesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="oldPricee != null" >
        #{oldPricee,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="learncount != null" >
        #{learncount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnit.learning_shop.entity.CourseBaseExample" resultType="java.lang.Integer" >
    select count(*) from course_base
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_base
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cname != null" >
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.catid != null" >
        catid = #{record.catid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.cDesc != null" >
        c_desc = #{record.cDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.oldPricee != null" >
        old_pricee = #{record.oldPricee,jdbcType=DOUBLE},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.learncount != null" >
        learncount = #{record.learncount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_base
    set id = #{record.id,jdbcType=INTEGER},
      cname = #{record.cname,jdbcType=VARCHAR},
      catid = #{record.catid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=VARCHAR},
      c_desc = #{record.cDesc,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      old_pricee = #{record.oldPricee,jdbcType=DOUBLE},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      pic = #{record.pic,jdbcType=VARCHAR},
      learncount = #{record.learncount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnit.learning_shop.entity.CourseBase" >
    update course_base
    <set >
      <if test="cname != null" >
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="catid != null" >
        catid = #{catid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="cDesc != null" >
        c_desc = #{cDesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="oldPricee != null" >
        old_pricee = #{oldPricee,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="learncount != null" >
        learncount = #{learncount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnit.learning_shop.entity.CourseBase" >
    update course_base
    set cname = #{cname,jdbcType=VARCHAR},
      catid = #{catid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      grade = #{grade,jdbcType=VARCHAR},
      c_desc = #{cDesc,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      old_pricee = #{oldPricee,jdbcType=DOUBLE},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      learncount = #{learncount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>